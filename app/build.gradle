plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs.kotlin'
}
apply from: '../config.gradle'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 混淆配置
        proguardFiles 'proguard-app.pro'
        resValue "string", "game_view_content_description", ""
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    signingConfigs {
        config {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
        }
    }

    buildTypes {
        debug {
            // 调试模式开关
            debuggable true
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.config

            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
        release {
            // 调试模式开关
            debuggable false
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.config

            ndk {
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
        }
    }

    buildFeatures{
        dataBinding = true
    }

    packagingOptions {
        // 剔除这个包下的所有文件（不会移除签名信息）
        exclude 'META-INF/*******'
    }

    applicationVariants.all { variant ->
        // Apk 输出文件名配置
        variant.outputs.all { output ->
            outputFileName = rootProject.getName() + '_v' + variant.versionName + '_' + variant.buildType.name
            if (variant.buildType.name == buildTypes.release.getName()) {
                outputFileName += '_' + new Date().format('MMdd')
            }
            outputFileName += '.apk'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ['*.aar', '*.jar'])
    implementation project(path: ':common-library')
    implementation rootProject.ext.androidx['navigation-fragment-ktx']
    implementation rootProject.ext.androidx['navigation-ui-ktx']
    implementation rootProject.ext.dependencies['android-startup']
    implementation rootProject.ext.dependencies['permissionx']
    implementation rootProject.ext.dependencies['brv']
    implementation rootProject.ext.dependencies['autosize']
    implementation rootProject.ext.dependencies['liveDataBus']
    implementation rootProject.ext.dependencies['agentweb']
    implementation rootProject.ext.dependencies['pictureselector']
    implementation rootProject.ext.dependencies['3dmap']
    implementation rootProject.ext.dependencies['glide']
    kapt rootProject.ext.dependencies['glide_compiler']
    implementation rootProject.ext.dependencies['bugly']
    implementation rootProject.ext.dependencies['barCode']
    debugImplementation rootProject.ext.dependencies['leakcanary']

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
